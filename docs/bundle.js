(()=>{"use strict";var e={6889:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,"#app-header{z-index:1}","",{version:3,sources:["webpack://./src/app/app.component.scss"],names:[],mappings:"AAAA,YACI,SAAA",sourceRoot:""}]);const s=a},9392:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,".card-detail-section #image{max-height:20rem}.card-detail-section #title{font-size:2rem;font-weight:600}.card-detail-section #description{font-size:1.2rem;font-weight:400}.card-detail-section #buttons button img{height:1.3rem}.card-detail-section #buttons button span{font-size:1rem;font-weight:600}.card-detail-section #buttons #edit{background-color:rgba(13,110,253,.3)}.card-detail-section #buttons #delete{background-color:rgba(220,53,69,.3)}","",{version:3,sources:["webpack://./src/app/components/card-detail/card-detail.component.scss"],names:[],mappings:"AACI,4BACI,gBAAA,CAGJ,4BACI,cAAA,CACA,eAAA,CAGJ,kCACI,gBAAA,CACA,eAAA,CAKI,yCACI,aAAA,CAGJ,0CACI,cAAA,CACA,eAAA,CAIR,oCACI,oCAAA,CAGJ,sCACI,mCAAA",sourceRoot:""}]);const s=a},5196:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,".card-list-section #card-list .image-wrap{padding-top:100%}.card-list-section #card-list .title{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;line-clamp:1;overflow:hidden;font-size:1.5rem}.card-list-section #card-list .description{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:3;line-clamp:3;overflow:hidden;font-size:1.1rem;color:gray}.card-list-section .explore-button{background-color:#007bff;color:#fff;border:.125rem solid #155724}.card-list-section .explore-button:hover{background-color:#28a745}.card-list-section #no-card{margin-top:calc(50vh - 16rem)}.card-list-section #no-card span{font-size:2rem;font-weight:600}.card-list-section #no-card button{font-size:1.5rem;font-weight:400;background-color:#007bff}.card-list-section #no-card button:hover{background-color:#28a745}","",{version:3,sources:["webpack://./src/app/components/card-list/card-list.component.scss"],names:[],mappings:"AAEQ,0CACI,gBAAA,CAWJ,qCAPI,mBAAA,CACA,2BAAA,CACA,oBAMoB,CALpB,YAKoB,CAJpB,eAAA,CAKA,gBAAA,CAGJ,2CAZI,mBAAA,CACA,2BAAA,CACA,oBAWoB,CAVpB,YAUoB,CATpB,eAAA,CAUA,gBAAA,CACA,UAAA,CAIR,mCACI,wBAAA,CACA,UAAA,CACA,4BAAA,CAEA,yCACI,wBAAA,CAIR,4BACI,6BAAA,CAEA,iCACI,cAAA,CACA,eAAA,CAGJ,mCACI,gBAAA,CACA,eAAA,CACA,wBAAA,CAEA,yCACI,wBAAA",sourceRoot:""}]);const s=a},4400:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,".create-card-section input,.create-card-section textarea{font-size:1.2rem;line-height:normal}.create-card-section .error-message{display:none;font-size:1rem}.create-card-section .form-submitted .error input,.create-card-section .form-submitted .error textarea{border-color:#dc3545}.create-card-section .form-submitted .error .error-message{display:block}.create-card-section label{font-size:1rem;font-weight:600}.create-card-section #description-wrap{line-height:0}.create-card-section #description-wrap #description{height:16ex}.create-card-section #submit-btn-wrap #submit-btn{font-size:1.2rem;font-weight:600;background-color:#007bff}.create-card-section #submit-btn-wrap #submit-btn:hover{background-color:#28a745}","",{version:3,sources:["webpack://./src/app/components/create-card/create-card.component.scss"],names:[],mappings:"AAEI,yDAEI,gBAAA,CACA,kBAAA,CAGJ,oCACI,YAAA,CACA,cAAA,CAMI,uGAEI,oBAAA,CAGJ,2DACI,aAAA,CAKZ,2BACI,cAAA,CACA,eAAA,CAGJ,uCACI,aAAA,CAEA,oDACI,WAAA,CAKJ,kDACI,gBAAA,CACA,eAAA,CACA,wBAAA,CAEA,wDACI,wBAAA",sourceRoot:""}]);const s=a},6072:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,".footer-section{background-color:#e3e3e3;font-size:1.2rem;font-weight:400}","",{version:3,sources:["webpack://./src/app/components/footer/footer.component.scss"],names:[],mappings:"AAAA,gBACI,wBAAA,CACA,gBAAA,CACA,eAAA",sourceRoot:""}]);const s=a},3528:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,".header-section ul li{font-size:1.2rem;font-weight:600}.header-section .create-card-button{background-color:#007bff}.header-section .create-card-button:hover{background-color:#28a745}","",{version:3,sources:["webpack://./src/app/components/header/header.component.scss"],names:[],mappings:"AAEQ,sBACI,gBAAA,CACA,eAAA,CAIR,oCACI,wBAAA,CAEA,0CACI,wBAAA",sourceRoot:""}]);const s=a},360:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,".home-section .content{font-size:1.5rem;font-weight:400}","",{version:3,sources:["webpack://./src/app/components/home/home.component.scss"],names:[],mappings:"AACI,uBACI,gBAAA,CACA,eAAA",sourceRoot:""}]);const s=a},1480:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const s=a},6770:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,".page-not-found-section img{height:20rem;margin-top:calc(50vh - 16rem)}","",{version:3,sources:["webpack://./src/app/components/page-not-found/page-not-found.component.scss"],names:[],mappings:"AACI,4BACI,YAAA,CACA,6BAAA",sourceRoot:""}]);const s=a},6859:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Rubik+Moonrocks&display=swap);"]),a.push([e.id,'*{line-height:1.4em;font-weight:normal;box-sizing:border-box}a{text-decoration:none;transition-duration:.3s}button{background-color:rgba(0,0,0,0);padding:0;border:0;outline:none;cursor:pointer;font:inherit;color:inherit;transition-duration:.3s}input,textarea{outline:none;border:.063rem solid gray;border-radius:.375rem}ul{margin-top:0;margin-bottom:0;padding-left:0}ul li{list-style-type:none}h1,h2,h3,h4,h5,h6,p{margin-top:0;margin-bottom:0;font-family:inherit;font-family:"Poppins",sans-serif}strong{font-weight:bold}.container-1{width:calc(50vw + 40rem)}.container-2{width:calc(7vw + 40rem)}.width-fit-content{width:-moz-fit-content;width:fit-content}.pointer-events-none{pointer-events:none}.router-active{text-decoration:underline}.main-loader{margin-top:calc(50vh - 10rem)}.main-loader img{height:5rem}html{font-family:"Poppins",sans-serif;font-size:calc(.125vw + 13.6px)}html body{font:inherit;font-size:inherit;margin:0;word-wrap:break-word;word-break:break-word}',"",{version:3,sources:["webpack://./src/styles.scss"],names:[],mappings:"AAYA,EACI,iBAAA,CACA,kBAAA,CACA,qBAAA,CAGJ,EACI,oBAAA,CACA,uBAAA,CAGJ,OACI,8BAAA,CACA,SAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,uBAAA,CAGJ,eAEI,YAAA,CACA,yBAAA,CACA,qBAAA,CAGJ,GACI,YAAA,CACA,eAAA,CACA,cAAA,CAEA,MACI,oBAAA,CAIR,oBAOI,YAAA,CACA,eAAA,CACA,mBAAA,CACA,gCAAA,CAGJ,OACI,gBAAA,CASJ,aACI,wBAAA,CAGJ,aACI,uBAAA,CAGJ,mBACI,sBAAA,CACA,iBAAA,CAGJ,qBACI,mBAAA,CAGJ,eACI,yBAAA,CAGJ,aACI,6BAAA,CAEA,iBACI,WAAA,CAQR,KACI,gCAAA,CACA,+BAAA,CAEA,UACI,YAAA,CACA,iBAAA,CACA,QAAA,CACA,oBAAA,CACA,qBAAA",sourceRoot:""}]);const s=a},6314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},1354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},8155:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o='<div class="position-relative min-vh-100 all-components d-flex flex-column"> <header id="app-header" class="position-sticky top-0"></header> <main id="app-main" class="flex-grow-1 d-flex flex-column"></main> <footer id="app-footer" class=""></footer> </div>'},4524:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});var o=new URL(n(5171),n.b);const r=`<section class="card-detail-section"> <div class="main-loader"> <img src="${o}" alt="loader" class="d-block mx-auto"> </div> <div class="px-3 px-md-4 px-xl-5 py-4 py-lg-5 container-1 mx-auto mw-100 text-center d-none content"> <img src="${new URL(n(8706),n.b)}" alt="banner image" id="image" class="mw-100"> <h1 id="title" class="mt-4 text-black"></h1> <p id="description" class="mt-4 text-dark"></p> <div id="buttons" class="d-flex justify-content-center mt-5"> <button type="button" class="rounded-pill overflow-hidden px-3 py-2" id="edit"> <img src="${new URL(n(6343),n.b)}" alt="edit"> <span class="ps-1 ps-lg-2 text-primary">Edit</span> </button> <div class="position-relative width-fit-contentms-3 ms-3 ms-lg-4 rounded-pill overflow-hidden" id="delete"> <button type="button" class="px-3 py-2"> <img src="${new URL(n(154),n.b)}" alt="delete"> <span class="ps-1 ps-lg-2 text-danger">Delete</span> </button> <img src="${o}" alt="spinner" id="delete-btn-spinner" class="position-absolute top-50 start-50 translate-middle d-none"> </div> </div> </div> </section>`},8984:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o=`<div class="px-3 px-md-4 px-xl-5 py-2 container-1 mx-auto mw-100 card-list-section"> <div class="main-loader"> <img src="${new URL(n(5171),n.b)}" alt="loader" class="d-block mx-auto"> </div> <div class="d-none"> <img src="${new URL(n(8706),n.b)}" alt="placeholder-image" id="placeholder-image"> <img src="${new URL(n(6343),n.b)}" alt="edit" id="edit"> <img src="${new URL(n(154),n.b)}" alt="delete" id="delete"> </div> <div id="card-list-wrap"> <ul id="card-list" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 row-cols-xxl-6 pb-5"> </ul> <div id="no-card" class="d-none"> <span class="d-block text-center"> Oops! No Cards Here 😕🙅‍♂️ </span> <button class="text-white px-3 py-2 d-block mx-auto rounded-2 mt-3"> Create a card </button> </div> </div> </div>`},8300:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});var o=new URL(n(5171),n.b);const r=`<div class="py-5 px-3 px-md-4 px-xl-5 create-card-section"> <div class="d-none main-loader"> <img src="${o}" alt="loader" class="d-block mx-auto"> </div> <form id="card-form" class="container-2 mx-auto mw-100"> <div id="title-wrap"> <label for="title"> Title <span class="text-danger">*</span> </label> <input type="text" id="title" class="mt-2 w-100 px-3 py-2 bg-white" name="title" maxlength="100"> <div class="text-danger mt-2 error-message"> Title is required. </div> </div> <div id="description-wrap" class="mt-4"> <label for="description"> Description <span class="text-danger">*</span> </label> <textarea id="description" class="mt-2 w-100 px-3 py-2 bg-white" name="description" maxlength="500"></textarea> <div class="text-danger mt-2 error-message"> Description is required. </div> </div> <div class="mt-4" id="image-link-wrap"> <label for="image-link"> Image Link (not mandatory) </label> <input type="text" id="image-link" class="mt-2 w-100 px-3 py-2 bg-white" name="imageLink" maxlength="500"> <div class="text-danger mt-2 error-message"> It seems the link you've provided isn't pointing to a valid image. Please ensure that the URL starts with http:// or https:// and ends with a recognized image format like .jpg, .jpeg, .png, .gif, .bmp, .webp, .svg, or .tiff. </div> </div> <div id="submit-btn-wrap" class="mt-5 position-relative mx-auto width-fit-content"> <button type="button" id="submit-btn" class="text-white p-4 py-3 rounded-2 d-block"> Submit </button> <img src="${o}" alt="spinner" id="submit-btn-spinner" class="position-absolute top-50 start-50 translate-middle d-none"> </div> </form> </div>`},7568:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o='<div class="footer-section"> <div class="px-3 px-md-4 px-xl-5 py-3 py-lg-4 container-1 mx-auto mw-100 text-center"> Developed by <a href="https://www.linkedin.com/in/khan-arnab?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app" target="_blank">Arnab Khan</a>. </div> </div>'},9748:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o='<div class="bg-body-secondary shadow header-section"> <nav class="px-3 px-md-4 px-xl-5 py-2 container-1 mx-auto mw-100"> <ul class="row row-cols-auto align-items-center gx-3 gx-md-4 gx-xl-5 gy-3 justify-content-between text-primary-emphasis"> <li> <button class="border-0 bg-transparent" data-route="">Home</button> </li> <li> <button class="border-0 bg-transparent" data-route="card-list">Card list</button> </li> <li class="flex-grow-1"> <button class="border-0 px-2 px-md-3 py-1 py-md-2 rounded-pill ms-auto d-block text-white create-card-button" data-route="create-card"> Create card </button> </li> </ul> </nav> </div>'},7964:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o='<div class="home-section"> <p class="px-3 px-md-4 px-xl-5 py-4 py-lg-5 container-1 mx-auto mw-100 content"> I have created a single-page application without using traditional frameworks or librarys like Angular, React, or Vue.js. The application is built with HTML, SCSS, and TypeScript and compile in a Node.js environment, with Webpack used for compiling the project files. In this application, users can create, edit, and delete cards. </p> </div>'},1412:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o='<div class="bg-body-tertiary flex-grow-1"> <div id="app-home"></div> <div id="app-card-list"></div> <div id="app-create-card"></div> <div id="app-card-detail"></div> <div id="app-page-not-found"></div> </div>'},1670:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o=`<div class="px-3 px-md-4 px-xl-5 py-2 container-1 mx-auto mw-100 text-center page-not-found-section"> <img src="${new URL(n(5693),n.b)}" alt="page-not-found" class="mw-100"> </div> `},9182:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(6889),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},5793:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(9392),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},7573:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(5196),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},3049:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(4400),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},2573:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(6072),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},33:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(3528),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},7129:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(360),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},8505:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(1480),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},8483:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(6770),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},3418:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),d=n.n(s),l=n(5056),c=n.n(l),u=n(540),p=n.n(u),A=n(1113),m=n.n(A),v=n(6859),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(v.A,f);const h=v.A&&v.A.locals?v.A.locals:void 0},5072:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var d=e[s],l=o.base?d[0]+o.base:d[0],c=i[l]||0,u="".concat(l," ").concat(c);i[l]=c+1;var p=n(u),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var m=r(A,o);o.byIndex=s,t.splice(s,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=n(i[a]);t[s].references--}for(var d=o(e,r),l=0;l<i.length;l++){var c=n(i[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=d}}},7659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},5056:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},1113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},1618:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppComponent=void 0;const r=o(n(8155));n(9182),t.AppComponent=class{render(){const e=document.getElementById("app");e&&(e.innerHTML=r.default)}}},9125:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AppModule=void 0;const o=n(7248);t.AppModule=class{constructor(){}bootstrap(){(0,o.loadComponents)()}}},7248:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.navigateTo=f,t.renderRouter=C,t.loadComponents=function(){(new r.AppComponent).render(),(new l.AppHeaderComponent).render(),(new d.AppFooterComponent).render(),(new u.AppMainComponent).render(),C(),function(){const e=(0,o.getRouterInformation)();f(e[0],e[1]),window.addEventListener("popstate",g),b()}()};const o=n(8443),r=n(1618),i=n(2027),a=n(655),s=n(9499),d=n(5107),l=n(7555),c=n(7667),u=n(4579),p=n(9729),A={"":new c.AppHomeComponent,"card-list":new a.AppCardListComponent,"create-card":new s.AppCreateCardComponent,"edit-card":new s.AppCreateCardComponent,"card-detail":new i.AppCardDetailComponent,"page-not-found":new p.AppPageNotFoundComponent},m=["app-home","app-card-list","app-create-card","app-card-detail","app-page-not-found"];function v(){m.forEach((e=>{const t=document.getElementById(e);t&&(t.innerHTML="")}))}function f(e,t){const n=null==A?void 0:A[e];n?(v(),history.pushState({},"",`#${e}${t?`?id=${t}`:""}`),null==n||n.render(),b()):f("page-not-found",null)}const h=new Set;function C(){document.querySelectorAll("[data-route]").forEach((e=>{h.has(e)||(e.addEventListener("click",(e=>{const t=e.currentTarget;f(t.getAttribute("data-route")||"",t.getAttribute("data-id"))})),h.add(e))}))}function g(){const e=(0,o.getRouterInformation)(),t=A[e[0]];t&&(v(),null==t||t.render(),b())}function b(){const e="router-active",t=document.querySelectorAll("[data-route]"),n=(0,o.getRouterInformation)();t.forEach((t=>{const o=t.getAttribute("data-route");n[0]==o?t.classList.add(e):t.classList.remove(e)}))}},2027:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppCardDetailComponent=void 0;const r=n(2284),i=n(8443),a=n(7248),s=o(n(4524));n(5793),t.AppCardDetailComponent=class{render(){(0,i.addTemplateToElementBasedOnId)("app-card-detail",s.default),this.addEventListeners(),this.getCardFromApi()}addEventListeners(){const e=document.querySelector(".card-detail-section #edit");e&&e.addEventListener("click",this.editCard.bind(this));const t=document.querySelector(".card-detail-section #delete");t&&t.addEventListener("click",this.deleteCardByApi.bind(this))}getCardFromApi(){this.cardId=(0,i.getRouterInformation)()[1],(0,r.getCard)(this.cardId).then((e=>{e?(console.log("card",e),this.addValue(e),this.hideLoader()):(0,a.navigateTo)("page-not-found",null)}))}addValue(e){const t=document.getElementById("image"),n=null==e?void 0:e.imageLink;t&&n&&(t.src=n);const o=document.getElementById("title");o&&(o.innerText=(null==e?void 0:e.title)||"");const r=document.getElementById("description");r&&(r.innerText=(null==e?void 0:e.description)||"")}editCard(){(0,a.navigateTo)("edit-card",this.cardId)}deleteCardByApi(){this.cardId&&(this.startDeleteButtonLoader(),(0,r.deleteCard)(this.cardId).then((()=>{(0,a.navigateTo)("card-list",null)})))}hideLoader(){var e,t;const n=document.querySelector(".card-detail-section .main-loader"),o=document.querySelector(".card-detail-section .content");null===(e=null==n?void 0:n.classList)||void 0===e||e.add("d-none"),null===(t=null==o?void 0:o.classList)||void 0===t||t.remove("d-none")}startDeleteButtonLoader(){var e,t,n;const o=document.querySelector(".card-detail-section"),r=document.querySelector(".card-detail-section #delete button"),i=document.querySelector(".card-detail-section #delete #delete-btn-spinner");null===(e=null==o?void 0:o.classList)||void 0===e||e.add("pointer-events-none"),null===(t=null==i?void 0:i.classList)||void 0===t||t.remove("d-none"),null===(n=null==r?void 0:r.classList)||void 0===n||n.add("invisible")}}},655:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppCardListComponent=void 0;const r=n(2284),i=n(8443),a=n(7248),s=o(n(8984));n(7573),t.AppCardListComponent=class{constructor(){this.noOfCard=0}render(){(0,i.addTemplateToElementBasedOnId)("app-card-list",s.default),this.getCardsFromApi()}getCardsFromApi(){(0,r.getCards)().then((e=>{var t;if(console.log("card-list",e),e){const n=null===(t=Object.entries(e))||void 0===t?void 0:t.map((e=>Object.assign(e[1],{id:e[0]}))).reverse();this.noOfCard=(null==n?void 0:n.length)||0,this.noOfCard?this.addCards(n):this.noCard()}else this.noCard();this.hideLoader()}))}addCards(e){var t,n,o;const r=document.getElementById("card-list");if(r){const i=null===(t=document.getElementById("placeholder-image"))||void 0===t?void 0:t.src,s=null===(n=document.getElementById("edit"))||void 0===n?void 0:n.src,d=null===(o=document.getElementById("delete"))||void 0===o?void 0:o.src,l=e.map((e=>`\n                <li class="mt-5 card-item">\n                    <div class="bg-white rounded-2 overflow-hidden shadow h-100 d-flex flex-column">\n                        <div class="position-relative image-wrap">\n                            <img src="${(null==e?void 0:e.imageLink)||i}" alt="${null==e?void 0:e.title} "class="w-100 h-100 top-0 start-0 object-fit-cover position-absolute">\n                        </div>\n                        <div class="p-3 d-flex flex-column flex-grow-1">\n                            <div class="flex-grow-1">\n                                <h2 class="title">${null==e?void 0:e.title}</h2>\n                                <p class="mt-2 description">${null==e?void 0:e.description}</p>\n                            </div>\n                            <div class="mt-3 d-flex align-items-center justify-content-between">\n                                <button data-route="card-detail" data-id="${encodeURIComponent((null==e?void 0:e.id)||"-")}" class="rounded-2 px-2 py-1 d-block router-element explore-button">Explore</button>\n                                <div class="d-flex align-items-center">\n                                    <button type="button" data-route="edit-card" data-id="${encodeURIComponent((null==e?void 0:e.id)||"-")}" class="router-element">\n                                        <img src="${s}" alt="edit">\n                                    </button>\n                                    <button type="button" delete-id="${null==e?void 0:e.id}">\n                                        <img src="${d}" alt="delete" class="ms-2">\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            `)).join("");r.innerHTML=l,(0,a.renderRouter)(),this.addDeleteFunction(r)}}addDeleteFunction(e){e.querySelectorAll(".card-item").forEach((e=>{const t=e.querySelector("[delete-id]");t&&t.addEventListener("click",this.deleteCardByApi.bind(this,t,e))}))}deleteCardByApi(e,t){var n;const o=e.getAttribute("delete-id");o&&(null===(n=null==t?void 0:t.classList)||void 0===n||n.add("d-none"),this.noOfCard--,this.noOfCard||this.noCard(),(0,r.deleteCard)(o))}noCard(){var e;const t=document.querySelector(".card-list-section #no-card");if(t){null===(e=null==t?void 0:t.classList)||void 0===e||e.remove("d-none");const n=t.querySelector("button");n&&n.addEventListener("click",(function(){(0,a.navigateTo)("create-card",null)}))}}hideLoader(){var e;const t=document.querySelector(".card-list-section .main-loader");null===(e=null==t?void 0:t.classList)||void 0===e||e.add("d-none")}}},9499:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppCreateCardComponent=void 0;const r=n(2284),i=n(8443),a=n(7248),s=o(n(8300));n(3049),t.AppCreateCardComponent=class{constructor(){this.cardId="",this.apiBody={},this.imagePattern=/^(https?:\/\/.*\.(jpg|jpeg|png|gif|bmp|webp|svg|tiff|tif)(\?.*)?)$/i}render(){(0,i.addTemplateToElementBasedOnId)("app-create-card",s.default),this.cardId=(0,i.getRouterInformation)()[1],this.addEventListeners(),this.getCardFromApi()}getCardFromApi(){this.cardId&&(this.showHideLoader(!0),(0,r.getCard)(this.cardId).then((e=>{console.log("card",e),this.patchValue(e),this.showHideLoader(!1)})))}patchValue(e){const t=document.querySelector('[name="title"]'),n=document.querySelector('[name="description"]'),o=document.querySelector('[name="imageLink"]');t&&(t.value=(null==e?void 0:e.title)||""),n&&(n.value=(null==e?void 0:e.description)||""),o&&(o.value=(null==e?void 0:e.imageLink)||"")}addEventListeners(){this.submitButton=document.getElementById("submit-btn"),this.submitButton&&this.submitButton.addEventListener("click",this.submitForm.bind(this)),this.form=document.getElementById("card-form"),this.form&&this.form.addEventListener("input",this.changeInput.bind(this))}submitForm(e){var t,n,o;if(e.preventDefault(),this.createApiBody(),null===(n=null===(t=this.form)||void 0===t?void 0:t.classList)||void 0===n||n.add("form-submitted"),this.allErrorHandle()){const e=null===(o=this.form)||void 0===o?void 0:o.querySelector(".error");e&&e.scrollIntoView({behavior:"smooth",block:"center"})}else{let e;this.startLoader(),e=this.cardId?(0,r.editCard)(this.cardId,this.apiBody):(0,r.postCard)(this.apiBody),e.then((e=>{console.log("Added data:",e),(0,a.navigateTo)("card-list",null)}))}}createApiBody(){var e,t,n,o,r,i;const a=null===(t=null===(e=document.querySelector('[name="title"]'))||void 0===e?void 0:e.value)||void 0===t?void 0:t.trim(),s=null===(o=null===(n=document.querySelector('[name="description"]'))||void 0===n?void 0:n.value)||void 0===o?void 0:o.trim(),d=null===(i=null===(r=document.querySelector('[name="imageLink"]'))||void 0===r?void 0:r.value)||void 0===i?void 0:i.trim();this.apiBody={title:a,description:s||"",imageLink:d||""}}changeInput(){this.createApiBody(),this.allErrorHandle()}allErrorHandle(){const e=this.errorHandle("title-wrap","title"),t=this.errorHandle("description-wrap","description"),n=this.patternErrorHandle("image-link-wrap","imageLink",this.imagePattern);return e||t||n}errorHandle(e,t){var n;let o=!1;const r=document.getElementById(e);return r&&((null===(n=this.apiBody)||void 0===n?void 0:n[t])?r.classList.remove("error"):(r.classList.add("error"),o=!0)),o}patternErrorHandle(e,t,n){var o;let r=!1;const i=null===(o=this.apiBody)||void 0===o?void 0:o[t],a=document.getElementById(e);return a&&(!i||n.test(i)?a.classList.remove("error"):(a.classList.add("error"),r=!0)),r}startLoader(){var e,t,n,o,r;const i=document.getElementById("submit-btn-spinner");null===(t=null===(e=this.submitButton)||void 0===e?void 0:e.classList)||void 0===t||t.add("invisible"),null===(n=null==i?void 0:i.classList)||void 0===n||n.remove("d-none"),null===(r=null===(o=this.form)||void 0===o?void 0:o.classList)||void 0===r||r.add("pointer-events-none")}showHideLoader(e){var t,n,o,r;const i=document.querySelector(".create-card-section .main-loader"),a=document.querySelector(".create-card-section #card-form");e?(null===(t=null==i?void 0:i.classList)||void 0===t||t.remove("d-none"),null===(n=null==a?void 0:a.classList)||void 0===n||n.add("d-none")):(null===(o=null==i?void 0:i.classList)||void 0===o||o.add("d-none"),null===(r=null==a?void 0:a.classList)||void 0===r||r.remove("d-none"))}}},5107:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppFooterComponent=void 0;const r=n(8443),i=o(n(7568));n(2573),t.AppFooterComponent=class{render(){(0,r.addTemplateToElementBasedOnId)("app-footer",i.default)}}},7555:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppHeaderComponent=void 0;const r=n(8443),i=o(n(9748));n(33),t.AppHeaderComponent=class{render(){(0,r.addTemplateToElementBasedOnId)("app-header",i.default)}}},7667:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppHomeComponent=void 0;const r=n(8443),i=o(n(7964));n(7129),t.AppHomeComponent=class{render(){(0,r.addTemplateToElementBasedOnId)("app-home",i.default)}}},4579:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppMainComponent=void 0;const r=n(8443),i=o(n(1412));n(8505),t.AppMainComponent=class{render(){(0,r.addTemplateToElementBasedOnId)("app-main",i.default)}}},9729:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppPageNotFoundComponent=void 0;const r=n(8443),i=o(n(1670));n(8483),t.AppPageNotFoundComponent=class{render(){(0,r.addTemplateToElementBasedOnId)("app-page-not-found",i.default)}}},2284:function(e,t){var n=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function a(e){try{d(o.next(e))}catch(e){i(e)}}function s(e){try{d(o.throw(e))}catch(e){i(e)}}function d(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}d((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getCard=function(e){return n(this,void 0,void 0,(function*(){try{const t=yield fetch(`${r}/${o}/${e}.json`);if(!t.ok)throw new Error("Network response was not ok "+t.statusText);return yield t.json()}catch(e){console.error("Error fetching single card:",e)}}))},t.getCards=function(){return n(this,void 0,void 0,(function*(){try{const e=yield fetch(`${r}/${o}.json`);if(!e.ok)throw new Error("Network response was not ok "+e.statusText);return yield e.json()}catch(e){console.error("Error fetching data:",e)}}))},t.postCard=function(e){return n(this,void 0,void 0,(function*(){try{const t=yield fetch(`${r}/${o}.json`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error("Network response was not ok "+t.statusText);return yield t.json()}catch(e){console.error("Error adding data:",e)}}))},t.editCard=function(e,t){return n(this,void 0,void 0,(function*(){try{const n=yield fetch(`${r}/${o}/${e}.json`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!n.ok)throw new Error("Network response was not ok "+n.statusText);return yield n.json()}catch(e){console.error("Error updating data:",e)}}))},t.deleteCard=function(e){return n(this,void 0,void 0,(function*(){try{const t=yield fetch(`${r}/${o}/${e}.json`,{method:"DELETE"});if(!t.ok)throw new Error("Network response was not ok "+t.statusText);return yield t.json()}catch(e){console.error("Error deleting data:",e)}}))};const o="cards",r="https://create-cards-1-default-rtdb.firebaseio.com"},8443:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.addTemplateToElementBasedOnId=function(e,t){const n=document.getElementById(e);n?n.innerHTML=t:console.error(`Element with ID "${e}" not found.`)},t.getRouterInformation=function(){const e=window.location.hash.replace("#",""),[t,n]=e.split("?");let o;n&&(o=new URLSearchParams(n));return[t,decodeURIComponent((null==o?void 0:o.get("id"))||"")]}},154:(e,t,n)=>{e.exports=n.p+"9915a5ecc547cddc3860.svg"},6343:(e,t,n)=>{e.exports=n.p+"68aef5ee04fdf8662a97.svg"},8706:(e,t,n)=>{e.exports=n.p+"6daf9227ef12c9c6ae7f.svg"},5693:(e,t,n)=>{e.exports=n.p+"1c9a4ddf65a462017079.svg"},5171:(e,t,n)=>{e.exports=n.p+"5b8e381aadf52c966ca1.svg"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,n(3418),(new(n(9125).AppModule)).bootstrap()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,